                    +---------------------------+
                    | BurdockPaint file formats |
                    +---------------------------+

1. Basics
=========

  In this program the data are stored in blocks containing three parts:

    Start    Size     Description
      0       3       Data ID. Shows the type of the data the blocks contains.
                      Possible IDs:
                        PRJ        - Project data
                        IMG        - Image data
                        CLR or cLR - Color data
                        RGN or rGN - Region data
                        CCS        - Color clusters data (deprecated)
                        GRD        - Gradient data
                        GDT or gDT - Gradients data
                        USR        - UndoSystem data for region
                        USC        - UndoSystem data for color palette
                        USG        - UndoSystem data for gradients
                        UDR        - Undo operation data for region
                        UDG        - Undo operation data for gradients
      3       1       Version of the block
      4       4       Size of the block without the Data ID and the size.
      8     [Size]    The data in uncompressed or ZLib compressed format.

  The 5th bit of the first byte of ID shows if the block is compressed or not.
  If it is set, the block is compressed, otherwise not. So if the block ID
  starts with lowercase, it is compressed (cLR), if uppercase it is not (CLR).
  Not all blocks can be compressed, see list above.

  Each file contains exactly one block.

2. Detailed block formats
=========================

  Let's see basic blocks first the go to the more complex ones.


2.1. Basic blocks
~~~~~~~~~~~~~~~~~

2.1.1. CLR - Color data
-----------------------

  This block can be one of the 3 versions, allowing store color data efficiently.

  2.1.1.1. Version 1 - Plain colors data
  --------------------------------------

      Start   Size                Description (content)
      0       2                   Count of colors
      2       ColorCount*uint32   Color data

      This is the simplest, stores whole color data after each other.

  2.1.1.2. Version 2 - Separated color channels
  ---------------------------------------------

      Start   Size                Description (content)
      0       2                   Count of colors
      2       ColorCount*byte     Blue color data
      .       ColorCount*byte     Green color data
      .       ColorCount*byte     Red color data
      .       ColorCount*byte     Alpha color data

      In this version the color channels are separated allowing greater
      compression ratio in some cases.

  2.1.1.3. Version 3 - Delta encoded color channels
  -------------------------------------------------

      Start   Size                Description (content)
      0       2                  Count of colors
      2       ColorCount*byte    Blue color data delta encoded
      .       ColorCount*byte    Green color data delta encoded
      .       ColorCount*byte    Red color data delta encoded
      .       ColorCount*byte    Alpha color data delta encoded

      In this version the separated color channels are delta encoded allowing
      even greater compression ratio with color data containing gradients.

    Delta encoding
    --------------
      First byte is the same as original data
      Second and additional bytes are difference from the previous data byte.

      Example:
        Original data:  01 02 04 05 01 02 01 01
        Delta encoded:  01 01 02 01 FC 01 FF 00

        Encoding:       First=01
                        02-01=01
                        04-02=02
                        05-04=01
                        (01-05) and FF=FC
                        02-01=01
                        (01-02) and FF=FF
                        01-01=00

        Decoding:       First=01
                        01+01=02
                        02+02=04
                        04+01=05
                        (05+FC) and FF=01
                        01+01=02
                        (02+FF) and FF=01
                        01+00=01
                        04+01=05


2.1.2. RGN - Region data
------------------------

  Region data contains the pixel data of an image, or a region of the image.

  2.1.2.1. Version 1
  ------------------

      Start   Size                Description (content)
      0       2                   Left position of the topleft pixel
      2       2                   Top position of the topleft pixel
      4       2                   Width of the region
      6       2                   Height of the region
      8       width*height*4      Pixels line by line


2.1.3. GRD - Gradient data
------------------------

  Gradient data block contains everything about a gradient.

  2.1.3.1. Version 1
  ------------------

      Start   Size        Description (content)
      0       4           Start color (uint32)
      4       4           End color (uint32)
      8       1           Flags
                            bit 0 - reversed
                            bit 1 - pingpong
                            bit 2-4 - is additional color [3..5] is in use?
      9       4           Color (uint32)
      13      8           Position in gradient (double)
      21      4           Color (uint32)
      25      8           Position in gradient (double)
      33      4           Color (uint32)
      37      8           Position in gradient (double)


2.1.4. UDR - Region undo operation data
---------------------------------------

  Region undo operation data contains information about one undo/redo operation
  regarding a region of the image.

  2.1.4.1. Version 1
  ------------------

      Start   Size        Description (content)
      0       ???         The affected region before the operation, in an RGN-block
      .       ???         The affected region after the operation, in an RGN-block


2.1.5. UDG - Gradient undo operation data
----------------------------------------------

  Gradient undo operation data contains information about one undo/redo operation
  about a gradient.

  2.1.5.1. Version 1 (changing gradient)
  ------------------

      Start   Size        Description (content)
      0       4           Affected gradient index (in current image's gradient list).
      4       ???         The affected gradient before the editing in a GRD-block.
      .       ???         The affected gradient after the editing in a GRD-block.

  2.1.5.2. Version 2 (deleting gradient)
  ------------------

      Start   Size        Description (content)
      0       4           Affected gradient index (in current image's gradient list).
      4       ???         The affected gradient before deleting in a GRD-block.

  2.1.5.3. Version 3 (adding new gradient)
  ------------------

      Start   Size        Description (content)
      0       4           Affected gradient index (in current image's gradient list).


2.2. Complex blocks
~~~~~~~~~~~~~~~~~~~


2.2.1. USR - UndoSystem data for region
---------------------------------------

  This block contains info about undo/redo operations regarding regions.

  2.2.1.1. Version 1
  ------------------

      Start   Size        Description (content)
      0       2           Undo/redo operation count
      2       2           Index of current operation
      4       ???         UDR-blocks (count times)


2.2.2. USC - UndoSystem data for color palette
----------------------------------------------

  This block contains info about undo/redo operations regarding color palette.

  2.2.2.1. Version 1
  ------------------

      Start   Size        Description (content)
      0       2           Undo/redo operation count
      2       2           Index of current operation
      4       Count*9     Color palette undo data, count times
          0       1           Type of operation
                                0 - Palette color moved to ColorBox
                                1 - ColorBox color stored to Palette
          1       4           The color lost during the operation (uint32)
          5       4           The color that overwrote the lost color (uint32)


2.2.3. USG - UndoSystem data for Gradients
------------------------------------------

  This block contains info about undo/redo operations regarding gradients.

  2.2.3.1. Version 1
  ------------------

      Start   Size        Description (content)
      0       2           Undo/redo operation count
      2       2           Index of current operation
      4       ???         UDG-blocks (count times)


2.2.4. CCS - Color Clusters data (deprecated)
--------------------------------

  Contains data about color clusters.
  (They are converted to gradients when loaded.)

  2.2.4.1. Version 1
  ------------------

      Start   Size        Description (content)
      0       1           Color cluster count
      1       1           Active color cluster index
      2       Count*9     Color cluster data, count times
          0       4           Start color (uint32)
          4       4           End color (uint32)
          8       1           Flags
                                bit 0 - reversed
                                bit 1 - pingpong

2.2.5. GDT - Gradients data
--------------------------------

  Contains data about gradients.

  2.2.5.1. Version 1 (deprecated)
  ------------------

      Start   Size          Description (content)
      0       1             Gradient count
      1       1             Active gradient index
      2       count*45      Gradient data, count times
          0       4           Start color (uint32)
          4       4           End color (uint32)
          8       1           Flags
                                bit 0 - reversed
                                bit 1 - pingpong
                                bit 2-4 - is additional color [3..5] is in use?
          9       4           Color (uint32)
          13      8           Position in gradient (double)
          21      4           Color (uint32)
          25      8           Position in gradient (double)
          33      4           Color (uint32)
          37      8           Position in gradient (double)

  2.2.5.2. Version 2
  ------------------

      Start   Size          Description (content)
      0       1             Gradient count
      1       1             Active gradient index
      2       ???           Gradient datas in a GRD-blocks.


2.2.6. IMG - Image data
-----------------------

  Image data contains everything about an image in BurdockPaint. (The image
  itself, gradients, palette, undo/redo data.)

  2.2.6.1. Version 1
  ------------------

      Start   Size        Description (content)
      0       1           Flags
                            bit 0 - not used
                            bit 1 - Is data contains ImageUndoSystem data?
                            bit 2 - Is data contains PaletteUndoSystem data?
                            bit 3 - Is data contains Gradients data?
                            bit 4 - Is data contains GradientsUndoSystem data?
      1       ???         Favourite colors data in a CLR-block
      .       ???         Region data in an RGN-block
     [.       ???]        if Flags.bit[1] is set then ImageUndoSystem data in an USR-block
     [.       ???]        if Flags.bit[2] is set then PaletteUndoSystem data in an USC-block
     [.       ???]        if Flags.bit[3] is set then Gradients data in an CCS-block
     [.       ???]        if Flags.bit[4] is set then GradientsUndoSystem data in an USG-block


2.2.7. PRJ - Project data
-------------------------

  Project data is the summary of the images of a project. It contains:
    - one or more images (image, undo, fav. colors and gradients data in IMG-blocks)
    - zero or one CEL image (since it shared between the images) (RGN-block)

  2.2.7.1. Version 1
  ------------------

      Start   Size        Description (content)
      0       1           Flags
                            bit 0 - Is project contains the CELImage?
      1       2           Image count
      3       2           Active image index
      5       ???         First image in an IMG-block
     [.       ???]        More images in IMG-blocks
     [.       ???]        If Flags.bit[0] is set then CELImage in an RGN-block


3. Standalone file formats
==========================

3.1. Image file (.bpimg)
~~~~~~~~~~~~~~~~~~~~~~~~

It is an IMG-block. Contains image, fav. colors, gradients and undo data.


3.2. CEL file format (.png)
~~~~~~~~~~~~~~~~~~~~~~~~~~~

It is a simple PNG file. No need for special CEL file.


3.3. Project file format (.bpprj)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

It is a PRJ-block.

