Todo:
- Palette editor should activate the SelectColor Tool in the background.
  This tool should select a color if left clicked on the drawarea and
  exit palette editor when right clicked on the drawarea.
- Create menu like in the original. (Not the same items.)
- Autosave state in every 1 min.
- Configurable autosave interval.


2023.03.02
- Added sliders to PaletteEditor. They are not changing anything yet.
- Sliders now change the currently selected colors RGB channels.

2023.03.01
- Removed string data part from Messaging subsystem.

2023.02.28
- New tool: PickColor (PICKCOL). When activated, click anywhere on the draw area
  to pick a color. That color is put on the MessageQueue in a MSG_PICKEDCOLOR message.
- Right clicking on ColorSelector invokes PICKCOL, and the picked color
  is put into the selected slot.
- The picked colors are saved in INI file.
- Middle click on ColorSelector to invoke PaletteEditor.
- The currently "picked" color slot is highlighted with VibroColors.
- FIX: Clicking the thin line beetween the key color and the other colors
  no longer invokes color picking for the selected color.
- Pressing F1 changes the ActiveColorIndex to the color under the cursor.
- Get rid of MSG_ACTIVATETOOL and MSG_ACTIVATEINK. Using the buttons TAG property
  and OnClick event instead.
- Changed mouse button checks to SDL_BUTTON* constants.

2023.02.27
- Undosystem now saves only region data instead of palette+region in region type
  undoitem. (It was correct in the file format text, only implementation was wrong.)
- New block type in filetypes (SystemState - S-block).
- System state (image current state, palette, undo state and CEL if exists) saved
  to state.bds.
- ColorSelector selects color only by left clicking on it.
- Removing some obsolete code and declarations here and there.
- Button appearance can be changed in INI file. (Settings/ModernGraphics)
- Right clicking on ColorSelector invokes PaletteEditor. Cannot go back, you have
  to quit (Q->Y).
- Palette Editor shows the first 256 colors, highlights the active color.

2023.02.26
- Undo/Redo buttons are disabled when nothing to undo/redo.
- BUGFix: Sometimes the render to texture failed to render. Especially when after
  changing zoom level the whole picture got outside of DrawArea.
- Message handling moved to TControls for messages needed to be handled by TControls.

2023.02.25
- UndoSystem state saved and loaded (temp.bdu).

2023.02.24
- File format changed.
- File format documented in fileformats.txt.

2023.02.22
- Added Undo/Redo code to Circle.
- Added Undo/Redo code to Draw.
- BugFix: Controls now captures OnMouseDown if none of its child does it.
  This prevents Draw to start drawing without pressing LMB over the draw area.
- Added Undo/Redo code to Fill.
- Added Undo/Redo code to FillTo.
- Added Undo/Redo code to Line.
- Added Undo/Redo code to Sep.
- Added Undo/Redo code to PutCEL.
- Added UndoLimit to Settings (16 steps by default).
- UndoSystem respects UndoLimit. If a new item is added over the limit,
  the oldest item is removed to keep the item count in the limit.
- Fix: TBDPalette.CopyColorFrom ignored start and count.

2023.02.21
- Added Undo/Redo mechanism. (Not tested yet...)
- Added Undo/Redo buttons. (Not working yet...)
- Added Undo/Redo code to Box. You can now undo and redo Box drawing.

2023.02.19
- PutCEL now works as intended.
- PutCEL respects the state of (K) button.
- Vibrocolors is now a class and changes colors based on ticks instead of program loops.

2023.02.17
- Created a logo font, it is used in the splash screen.
- Added icon.
- GetCEL now stores position too.
- Pressing ESC or ` when in GetCEL or PutCEL cancels curent operation.
- Image position saved into BDP file. (Needed in CEL)
- PutCEL almost works as expected. Only thing is missing putting the CEL onto the image.

2023.02.16
- Pressing ` (the key below ESC) invokes PUTCel. It doesn't work fully, you can
  just move the picked CEL image around with the mouse, until you quit.
  Cannot continue now, I drank a beer and cannot concentrate anymore. :)

2023.02.15
- Added color selector to controls.
- Added selected colors to Settings, so they are saved on exit and loaded on startup.
- Clicking on color selector selects the clicked color.
- The selected color is used when Opaque ink is selected.
- The selected color is saved into Settings.
- On startup the color selector selects the box that contains the color saved in Settings.

2023.02.14
- Small bugfix in writing color index under cursor.
- Removed (A) button. Has no meaning with paletted mode.

2023.02.13
- Bugfix with clickin anomaly. Click was on mouseup in TMouseObject, but was
  on mousedown in TDrawArea. Changed it in TDrawArea.

2023.02.12
- GETCEL really copies the selected area into CELImage.
  (It saves it to a PNG on exit, to be sure.)
- CEL is saved on exit and reloaded on startup.
- BUG narrowed down: The colored line appears only in PNG file and
  only with odd width. So the bug is in the PNG writer.
- BUG fixed: Writing paletted images with odd with and 4, 2 or 1 bitdepth was
  bugged. (Had to move the bit shift operations after adding the color bits.)

2023.02.10
- Added Pinnable property to tools, to differentiate between tools that can be
  selected in tool selector and the tools that cannot be selected. (The latter
  are used internally like GETCEL or PUTCEL.)
- Bugfix in BOX tool.

2023.02.02
- Added a small area showing cursor coordinates and color index under cursor.
  (Currently it is the part of Controls, but should separate it, to be visible
  even with hidden Controls.)

2023.02.01
- Drawing shapes respects the (F) button.
- Added a nice splash screen. (Turn it off in the .ini [Settings]/ShowSplash=No)

2023.01.31
- Added (F) (K) and (A) toggle buttons. (Fill shapes, clear key color and use alpha respectively)
- Cosmetics: Fix in system font in letter K and L. These were only 4 pixel width.

2023.01.30
- ESC hides controls and activates CEL picker. Right clicking in any phase will
  return controls and activates previous tool.

2023.01.27
- Using TStreamingTexture as DrawArea. It makes the FPS go over 60.
- Added secondary key mapping form zooming.

2023.01.26
- Changed vibrocolors.
- Added CEL picker. Currently you have to click on GETCEL button to activate.
- Added clipping for image drawing methods.
- Optimized render to screen.
- Added FPS counter. It seems that in lower zoom levels the fps count falls drastically.

2023.01.25
- Quit like in the original. Press Q, and click yes or no, or press Y or N.
- Key mapping added, stored and loaded from the settings.
- You can assign keys to Quit, Yes and No.
- Added keymapping to panning keys, centering and zooming.

2023.01.24
- Added tool and ink buttons.
- Clicking them changes the selection.
- Bugfix in TContainer.HandleEvent.
- Bugfix in TMouseObject.HandleEvent.
- Drawing with tools is working now, using the selected ink.

2023.01.23
- Cursor drawing optimized. (Removed setting color before every draw by
  calling direct SDL2 procedures instead of MK_SDL2 wrapped ones.)
- Added comment in MKMouse2 about ZIndex. (To be sure.)
- Added Inks.
- Added Tools.
- Added overlay image (not using it yet).
- Added Vibrocolors array.

2023.01.20
- Added ZIndex to TMouseObject.
- Added TMouseObjects.Sort to sort objects by ZIndex. (Could be better if Add
  would insert the object to it's proper place)
- DrawArea added.
- DrawArea is rendered to PrimaryWindow directly.
- Panning with right mouse buttons works.
- Zooming with mouse wheel works.
- Panning with arrow or WSAD keys works.
- Cursor added to DrawArea.


2023.01.19
- Palette and Image class added.
- Saving temporary image at exit.
- Loading temporary image at startup or creating a new empty one if file not found.
- Comments added on TBDImage class definition.

2023.01.17
- Bottom controls panel appears with one clickable button.
- Clicking the button will select or unselect it.

2023.01.13
- Restarted with SDL2.
- Window appears with a static infobar.

